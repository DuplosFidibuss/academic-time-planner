name: GitHub Release

on:
  pull_request:
    branches: 
      - main
  push:
    paths-ignore:
      - 'doc/**'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish_and_create_release:
    runs-on: ubuntu-latest
    env:
      BLAZOR_PROJECT_FOLDER: AcademicTimePlanner 
      TEST_PROJECT_FOLDER: AcademicTimePlanner.Tests
      DOTNET_PUBLISH_FOLDER: bin/Release/net6.0/publish
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup dotnet sdk
        uses: actions/setup-dotnet@v1
        with: 
          dotnet-version: '6.0.x'
      - name: Install wasm-tools
        run: dotnet workload install wasm-tools
      - name: Run dotnet publish
        run: dotnet publish -c Release
      - name: Zip Folder
        run: |
          cd $BLAZOR_PROJECT_FOLDER/$DOTNET_PUBLISH_FOLDER
          zip -r ${{ github.event.repository.name }}.zip .
      - name: Create github release from zip
        uses: ncipollo/release-action@v1
        with:
          artifacts: ${{env.BLAZOR_PROJECT_FOLDER}}/${{env.DOTNET_PUBLISH_FOLDER}}/${{ github.event.repository.name }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
  build-and-push-image:
    needs: publish_and_create_release
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            PAT=${{ secrets.GITHUB_TOKEN }}
            VERSION=${{ github.ref_name }}
